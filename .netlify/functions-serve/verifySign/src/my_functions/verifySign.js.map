{
  "version": 3,
  "sources": ["../../home/zafirr/Kuliah/Pemfung/TugasFaaS/node_modules/fp-ts/lib/function.js", "../../home/zafirr/Kuliah/Pemfung/TugasFaaS/node_modules/fp-ts/lib/Apply.js", "../../home/zafirr/Kuliah/Pemfung/TugasFaaS/node_modules/fp-ts/lib/Functor.js", "../../home/zafirr/Kuliah/Pemfung/TugasFaaS/node_modules/fp-ts/lib/Applicative.js", "../../home/zafirr/Kuliah/Pemfung/TugasFaaS/node_modules/fp-ts/lib/Chain.js", "../../home/zafirr/Kuliah/Pemfung/TugasFaaS/node_modules/fp-ts/lib/ChainRec.js", "../../home/zafirr/Kuliah/Pemfung/TugasFaaS/node_modules/fp-ts/lib/internal.js", "../../home/zafirr/Kuliah/Pemfung/TugasFaaS/node_modules/fp-ts/lib/FromEither.js", "../../home/zafirr/Kuliah/Pemfung/TugasFaaS/node_modules/fp-ts/lib/Separated.js", "../../home/zafirr/Kuliah/Pemfung/TugasFaaS/node_modules/fp-ts/lib/Witherable.js", "../../home/zafirr/Kuliah/Pemfung/TugasFaaS/node_modules/fp-ts/lib/Either.js", "../../home/zafirr/Kuliah/Pemfung/TugasFaaS/my_functions/verifySign.ts", "../../home/zafirr/Kuliah/Pemfung/TugasFaaS/my_functions/http.ts", "../../home/zafirr/Kuliah/Pemfung/TugasFaaS/my_functions/helpers.ts"],
  "sourceRoot": "/tmp/tmp-478-wGTmd04izwg8",
  "sourcesContent": ["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getEndomorphismMonoid = exports.not = exports.SK = exports.hole = exports.pipe = exports.untupled = exports.tupled = exports.absurd = exports.decrement = exports.increment = exports.tuple = exports.flow = exports.flip = exports.constVoid = exports.constUndefined = exports.constNull = exports.constFalse = exports.constTrue = exports.constant = exports.unsafeCoerce = exports.identity = exports.apply = exports.getRing = exports.getSemiring = exports.getMonoid = exports.getSemigroup = exports.getBooleanAlgebra = void 0;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.10.0\n */\nvar getBooleanAlgebra = function (B) { return function () { return ({\n    meet: function (x, y) { return function (a) { return B.meet(x(a), y(a)); }; },\n    join: function (x, y) { return function (a) { return B.join(x(a), y(a)); }; },\n    zero: function () { return B.zero; },\n    one: function () { return B.one; },\n    implies: function (x, y) { return function (a) { return B.implies(x(a), y(a)); }; },\n    not: function (x) { return function (a) { return B.not(x(a)); }; }\n}); }; };\nexports.getBooleanAlgebra = getBooleanAlgebra;\n/**\n * Unary functions form a semigroup as long as you can provide a semigroup for the codomain.\n *\n * @example\n * import { Predicate, getSemigroup } from 'fp-ts/function'\n * import * as B from 'fp-ts/boolean'\n *\n * const f: Predicate<number> = (n) => n <= 2\n * const g: Predicate<number> = (n) => n >= 0\n *\n * const S1 = getSemigroup(B.SemigroupAll)<number>()\n *\n * assert.deepStrictEqual(S1.concat(f, g)(1), true)\n * assert.deepStrictEqual(S1.concat(f, g)(3), false)\n *\n * const S2 = getSemigroup(B.SemigroupAny)<number>()\n *\n * assert.deepStrictEqual(S2.concat(f, g)(1), true)\n * assert.deepStrictEqual(S2.concat(f, g)(3), true)\n *\n * @category instances\n * @since 2.10.0\n */\nvar getSemigroup = function (S) { return function () { return ({\n    concat: function (f, g) { return function (a) { return S.concat(f(a), g(a)); }; }\n}); }; };\nexports.getSemigroup = getSemigroup;\n/**\n * Unary functions form a monoid as long as you can provide a monoid for the codomain.\n *\n * @example\n * import { Predicate } from 'fp-ts/Predicate'\n * import { getMonoid } from 'fp-ts/function'\n * import * as B from 'fp-ts/boolean'\n *\n * const f: Predicate<number> = (n) => n <= 2\n * const g: Predicate<number> = (n) => n >= 0\n *\n * const M1 = getMonoid(B.MonoidAll)<number>()\n *\n * assert.deepStrictEqual(M1.concat(f, g)(1), true)\n * assert.deepStrictEqual(M1.concat(f, g)(3), false)\n *\n * const M2 = getMonoid(B.MonoidAny)<number>()\n *\n * assert.deepStrictEqual(M2.concat(f, g)(1), true)\n * assert.deepStrictEqual(M2.concat(f, g)(3), true)\n *\n * @category instances\n * @since 2.10.0\n */\nvar getMonoid = function (M) {\n    var getSemigroupM = exports.getSemigroup(M);\n    return function () { return ({\n        concat: getSemigroupM().concat,\n        empty: function () { return M.empty; }\n    }); };\n};\nexports.getMonoid = getMonoid;\n/**\n * @category instances\n * @since 2.10.0\n */\nvar getSemiring = function (S) { return ({\n    add: function (f, g) { return function (x) { return S.add(f(x), g(x)); }; },\n    zero: function () { return S.zero; },\n    mul: function (f, g) { return function (x) { return S.mul(f(x), g(x)); }; },\n    one: function () { return S.one; }\n}); };\nexports.getSemiring = getSemiring;\n/**\n * @category instances\n * @since 2.10.0\n */\nvar getRing = function (R) {\n    var S = exports.getSemiring(R);\n    return {\n        add: S.add,\n        mul: S.mul,\n        one: S.one,\n        zero: S.zero,\n        sub: function (f, g) { return function (x) { return R.sub(f(x), g(x)); }; }\n    };\n};\nexports.getRing = getRing;\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.11.0\n */\nvar apply = function (a) { return function (f) { return f(a); }; };\nexports.apply = apply;\n/**\n * @since 2.0.0\n */\nfunction identity(a) {\n    return a;\n}\nexports.identity = identity;\n/**\n * @since 2.0.0\n */\nexports.unsafeCoerce = identity;\n/**\n * @since 2.0.0\n */\nfunction constant(a) {\n    return function () { return a; };\n}\nexports.constant = constant;\n/**\n * A thunk that returns always `true`.\n *\n * @since 2.0.0\n */\nexports.constTrue = \n/*#__PURE__*/\nconstant(true);\n/**\n * A thunk that returns always `false`.\n *\n * @since 2.0.0\n */\nexports.constFalse = \n/*#__PURE__*/\nconstant(false);\n/**\n * A thunk that returns always `null`.\n *\n * @since 2.0.0\n */\nexports.constNull = \n/*#__PURE__*/\nconstant(null);\n/**\n * A thunk that returns always `undefined`.\n *\n * @since 2.0.0\n */\nexports.constUndefined = \n/*#__PURE__*/\nconstant(undefined);\n/**\n * A thunk that returns always `void`.\n *\n * @since 2.0.0\n */\nexports.constVoid = exports.constUndefined;\n/**\n * Flips the order of the arguments of a function of two arguments.\n *\n * @since 2.0.0\n */\nfunction flip(f) {\n    return function (b, a) { return f(a, b); };\n}\nexports.flip = flip;\nfunction flow(ab, bc, cd, de, ef, fg, gh, hi, ij) {\n    switch (arguments.length) {\n        case 1:\n            return ab;\n        case 2:\n            return function () {\n                return bc(ab.apply(this, arguments));\n            };\n        case 3:\n            return function () {\n                return cd(bc(ab.apply(this, arguments)));\n            };\n        case 4:\n            return function () {\n                return de(cd(bc(ab.apply(this, arguments))));\n            };\n        case 5:\n            return function () {\n                return ef(de(cd(bc(ab.apply(this, arguments)))));\n            };\n        case 6:\n            return function () {\n                return fg(ef(de(cd(bc(ab.apply(this, arguments))))));\n            };\n        case 7:\n            return function () {\n                return gh(fg(ef(de(cd(bc(ab.apply(this, arguments)))))));\n            };\n        case 8:\n            return function () {\n                return hi(gh(fg(ef(de(cd(bc(ab.apply(this, arguments))))))));\n            };\n        case 9:\n            return function () {\n                return ij(hi(gh(fg(ef(de(cd(bc(ab.apply(this, arguments)))))))));\n            };\n    }\n    return;\n}\nexports.flow = flow;\n/**\n * @since 2.0.0\n */\nfunction tuple() {\n    var t = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        t[_i] = arguments[_i];\n    }\n    return t;\n}\nexports.tuple = tuple;\n/**\n * @since 2.0.0\n */\nfunction increment(n) {\n    return n + 1;\n}\nexports.increment = increment;\n/**\n * @since 2.0.0\n */\nfunction decrement(n) {\n    return n - 1;\n}\nexports.decrement = decrement;\n/**\n * @since 2.0.0\n */\nfunction absurd(_) {\n    throw new Error('Called `absurd` function which should be uncallable');\n}\nexports.absurd = absurd;\n/**\n * Creates a tupled version of this function: instead of `n` arguments, it accepts a single tuple argument.\n *\n * @example\n * import { tupled } from 'fp-ts/function'\n *\n * const add = tupled((x: number, y: number): number => x + y)\n *\n * assert.strictEqual(add([1, 2]), 3)\n *\n * @since 2.4.0\n */\nfunction tupled(f) {\n    return function (a) { return f.apply(void 0, a); };\n}\nexports.tupled = tupled;\n/**\n * Inverse function of `tupled`\n *\n * @since 2.4.0\n */\nfunction untupled(f) {\n    return function () {\n        var a = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            a[_i] = arguments[_i];\n        }\n        return f(a);\n    };\n}\nexports.untupled = untupled;\nfunction pipe(a, ab, bc, cd, de, ef, fg, gh, hi) {\n    switch (arguments.length) {\n        case 1:\n            return a;\n        case 2:\n            return ab(a);\n        case 3:\n            return bc(ab(a));\n        case 4:\n            return cd(bc(ab(a)));\n        case 5:\n            return de(cd(bc(ab(a))));\n        case 6:\n            return ef(de(cd(bc(ab(a)))));\n        case 7:\n            return fg(ef(de(cd(bc(ab(a))))));\n        case 8:\n            return gh(fg(ef(de(cd(bc(ab(a)))))));\n        case 9:\n            return hi(gh(fg(ef(de(cd(bc(ab(a))))))));\n        default:\n            var ret = arguments[0];\n            for (var i = 1; i < arguments.length; i++) {\n                ret = arguments[i](ret);\n            }\n            return ret;\n    }\n}\nexports.pipe = pipe;\n/**\n * Type hole simulation\n *\n * @since 2.7.0\n */\nexports.hole = absurd;\n/**\n * @since 2.11.0\n */\nvar SK = function (_, b) { return b; };\nexports.SK = SK;\n/**\n * Use `Predicate` module instead.\n *\n * @since 2.0.0\n * @deprecated\n */\nfunction not(predicate) {\n    return function (a) { return !predicate(a); };\n}\nexports.not = not;\n/**\n * Use `Endomorphism` module instead.\n *\n * @category instances\n * @since 2.10.0\n * @deprecated\n */\nvar getEndomorphismMonoid = function () { return ({\n    concat: function (first, second) { return flow(first, second); },\n    empty: identity\n}); };\nexports.getEndomorphismMonoid = getEndomorphismMonoid;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sequenceS = exports.sequenceT = exports.getApplySemigroup = exports.apS = exports.apSecond = exports.apFirst = exports.ap = void 0;\nvar function_1 = require(\"./function\");\nfunction ap(F, G) {\n    return function (fa) { return function (fab) {\n        return F.ap(F.map(fab, function (gab) { return function (ga) { return G.ap(gab, ga); }; }), fa);\n    }; };\n}\nexports.ap = ap;\nfunction apFirst(A) {\n    return function (second) { return function (first) {\n        return A.ap(A.map(first, function (a) { return function () { return a; }; }), second);\n    }; };\n}\nexports.apFirst = apFirst;\nfunction apSecond(A) {\n    return function (second) { return function (first) {\n        return A.ap(A.map(first, function () { return function (b) { return b; }; }), second);\n    }; };\n}\nexports.apSecond = apSecond;\nfunction apS(F) {\n    return function (name, fb) { return function (fa) {\n        return F.ap(F.map(fa, function (a) { return function (b) {\n            var _a;\n            return Object.assign({}, a, (_a = {}, _a[name] = b, _a));\n        }; }), fb);\n    }; };\n}\nexports.apS = apS;\nfunction getApplySemigroup(F) {\n    return function (S) { return ({\n        concat: function (first, second) {\n            return F.ap(F.map(first, function (x) { return function (y) { return S.concat(x, y); }; }), second);\n        }\n    }); };\n}\nexports.getApplySemigroup = getApplySemigroup;\nfunction curried(f, n, acc) {\n    return function (x) {\n        var combined = Array(acc.length + 1);\n        for (var i = 0; i < acc.length; i++) {\n            combined[i] = acc[i];\n        }\n        combined[acc.length] = x;\n        return n === 0 ? f.apply(null, combined) : curried(f, n - 1, combined);\n    };\n}\nvar tupleConstructors = {\n    1: function (a) { return [a]; },\n    2: function (a) { return function (b) { return [a, b]; }; },\n    3: function (a) { return function (b) { return function (c) { return [a, b, c]; }; }; },\n    4: function (a) { return function (b) { return function (c) { return function (d) { return [a, b, c, d]; }; }; }; },\n    5: function (a) { return function (b) { return function (c) { return function (d) { return function (e) { return [a, b, c, d, e]; }; }; }; }; }\n};\nfunction getTupleConstructor(len) {\n    if (!tupleConstructors.hasOwnProperty(len)) {\n        tupleConstructors[len] = curried(function_1.tuple, len - 1, []);\n    }\n    return tupleConstructors[len];\n}\nfunction sequenceT(F) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var len = args.length;\n        var f = getTupleConstructor(len);\n        var fas = F.map(args[0], f);\n        for (var i = 1; i < len; i++) {\n            fas = F.ap(fas, args[i]);\n        }\n        return fas;\n    };\n}\nexports.sequenceT = sequenceT;\nfunction getRecordConstructor(keys) {\n    var len = keys.length;\n    switch (len) {\n        case 1:\n            return function (a) {\n                var _a;\n                return (_a = {}, _a[keys[0]] = a, _a);\n            };\n        case 2:\n            return function (a) { return function (b) {\n                var _a;\n                return (_a = {}, _a[keys[0]] = a, _a[keys[1]] = b, _a);\n            }; };\n        case 3:\n            return function (a) { return function (b) { return function (c) {\n                var _a;\n                return (_a = {}, _a[keys[0]] = a, _a[keys[1]] = b, _a[keys[2]] = c, _a);\n            }; }; };\n        case 4:\n            return function (a) { return function (b) { return function (c) { return function (d) {\n                var _a;\n                return (_a = {},\n                    _a[keys[0]] = a,\n                    _a[keys[1]] = b,\n                    _a[keys[2]] = c,\n                    _a[keys[3]] = d,\n                    _a);\n            }; }; }; };\n        case 5:\n            return function (a) { return function (b) { return function (c) { return function (d) { return function (e) {\n                var _a;\n                return (_a = {},\n                    _a[keys[0]] = a,\n                    _a[keys[1]] = b,\n                    _a[keys[2]] = c,\n                    _a[keys[3]] = d,\n                    _a[keys[4]] = e,\n                    _a);\n            }; }; }; }; };\n        default:\n            return curried(function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var r = {};\n                for (var i = 0; i < len; i++) {\n                    r[keys[i]] = args[i];\n                }\n                return r;\n            }, len - 1, []);\n    }\n}\nfunction sequenceS(F) {\n    return function (r) {\n        var keys = Object.keys(r);\n        var len = keys.length;\n        var f = getRecordConstructor(keys);\n        var fr = F.map(r[keys[0]], f);\n        for (var i = 1; i < len; i++) {\n            fr = F.ap(fr, r[keys[i]]);\n        }\n        return fr;\n    };\n}\nexports.sequenceS = sequenceS;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getFunctorComposition = exports.bindTo = exports.flap = exports.map = void 0;\n/**\n * A `Functor` is a type constructor which supports a mapping operation `map`.\n *\n * `map` can be used to turn functions `a -> b` into functions `f a -> f b` whose argument and return types use the type\n * constructor `f` to represent some computational context.\n *\n * Instances must satisfy the following laws:\n *\n * 1. Identity: `F.map(fa, a => a) <-> fa`\n * 2. Composition: `F.map(fa, a => bc(ab(a))) <-> F.map(F.map(fa, ab), bc)`\n *\n * @since 2.0.0\n */\nvar function_1 = require(\"./function\");\nfunction map(F, G) {\n    return function (f) { return function (fa) { return F.map(fa, function (ga) { return G.map(ga, f); }); }; };\n}\nexports.map = map;\nfunction flap(F) {\n    return function (a) { return function (fab) { return F.map(fab, function (f) { return f(a); }); }; };\n}\nexports.flap = flap;\nfunction bindTo(F) {\n    return function (name) { return function (fa) { return F.map(fa, function (a) {\n        var _a;\n        return (_a = {}, _a[name] = a, _a);\n    }); }; };\n}\nexports.bindTo = bindTo;\n/** @deprecated */\nfunction getFunctorComposition(F, G) {\n    var _map = map(F, G);\n    return {\n        map: function (fga, f) { return function_1.pipe(fga, _map(f)); }\n    };\n}\nexports.getFunctorComposition = getFunctorComposition;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getApplicativeComposition = exports.getApplicativeMonoid = void 0;\n/**\n * The `Applicative` type class extends the `Apply` type class with a `of` function, which can be used to create values\n * of type `f a` from values of type `a`.\n *\n * Where `Apply` provides the ability to lift functions of two or more arguments to functions whose arguments are\n * wrapped using `f`, and `Functor` provides the ability to lift functions of one argument, `pure` can be seen as the\n * function which lifts functions of _zero_ arguments. That is, `Applicative` functors support a lifting operation for\n * any number of function arguments.\n *\n * Instances must satisfy the following laws in addition to the `Apply` laws:\n *\n * 1. Identity: `A.ap(A.of(a => a), fa) <-> fa`\n * 2. Homomorphism: `A.ap(A.of(ab), A.of(a)) <-> A.of(ab(a))`\n * 3. Interchange: `A.ap(fab, A.of(a)) <-> A.ap(A.of(ab => ab(a)), fab)`\n *\n * Note. `Functor`'s `map` can be derived: `A.map(x, f) = A.ap(A.of(f), x)`\n *\n * @since 2.0.0\n */\nvar Apply_1 = require(\"./Apply\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nfunction getApplicativeMonoid(F) {\n    var f = Apply_1.getApplySemigroup(F);\n    return function (M) { return ({\n        concat: f(M).concat,\n        empty: F.of(M.empty)\n    }); };\n}\nexports.getApplicativeMonoid = getApplicativeMonoid;\n/** @deprecated */\nfunction getApplicativeComposition(F, G) {\n    var map = Functor_1.getFunctorComposition(F, G).map;\n    var _ap = Apply_1.ap(F, G);\n    return {\n        map: map,\n        of: function (a) { return F.of(G.of(a)); },\n        ap: function (fgab, fga) { return function_1.pipe(fgab, _ap(fga)); }\n    };\n}\nexports.getApplicativeComposition = getApplicativeComposition;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bind = exports.chainFirst = void 0;\nfunction chainFirst(M) {\n    return function (f) { return function (first) { return M.chain(first, function (a) { return M.map(f(a), function () { return a; }); }); }; };\n}\nexports.chainFirst = chainFirst;\nfunction bind(M) {\n    return function (name, f) { return function (ma) { return M.chain(ma, function (a) { return M.map(f(a), function (b) {\n        var _a;\n        return Object.assign({}, a, (_a = {}, _a[name] = b, _a));\n    }); }); }; };\n}\nexports.bind = bind;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.tailRec = void 0;\n/**\n * @since 2.0.0\n */\nvar tailRec = function (startWith, f) {\n    var ab = f(startWith);\n    while (ab._tag === 'Left') {\n        ab = f(ab.left);\n    }\n    return ab.right;\n};\nexports.tailRec = tailRec;\n", "\"use strict\";\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromReadonlyNonEmptyArray = exports.has = exports.emptyRecord = exports.emptyReadonlyArray = exports.tail = exports.head = exports.isNonEmpty = exports.singleton = exports.right = exports.left = exports.isRight = exports.isLeft = exports.some = exports.none = exports.isSome = exports.isNone = void 0;\n// -------------------------------------------------------------------------------------\n// Option\n// -------------------------------------------------------------------------------------\n/** @internal */\nvar isNone = function (fa) { return fa._tag === 'None'; };\nexports.isNone = isNone;\n/** @internal */\nvar isSome = function (fa) { return fa._tag === 'Some'; };\nexports.isSome = isSome;\n/** @internal */\nexports.none = { _tag: 'None' };\n/** @internal */\nvar some = function (a) { return ({ _tag: 'Some', value: a }); };\nexports.some = some;\n// -------------------------------------------------------------------------------------\n// Either\n// -------------------------------------------------------------------------------------\n/** @internal */\nvar isLeft = function (ma) { return ma._tag === 'Left'; };\nexports.isLeft = isLeft;\n/** @internal */\nvar isRight = function (ma) { return ma._tag === 'Right'; };\nexports.isRight = isRight;\n/** @internal */\nvar left = function (e) { return ({ _tag: 'Left', left: e }); };\nexports.left = left;\n/** @internal */\nvar right = function (a) { return ({ _tag: 'Right', right: a }); };\nexports.right = right;\n// -------------------------------------------------------------------------------------\n// ReadonlyNonEmptyArray\n// -------------------------------------------------------------------------------------\n/** @internal */\nvar singleton = function (a) { return [a]; };\nexports.singleton = singleton;\n/** @internal */\nvar isNonEmpty = function (as) { return as.length > 0; };\nexports.isNonEmpty = isNonEmpty;\n/** @internal */\nvar head = function (as) { return as[0]; };\nexports.head = head;\n/** @internal */\nvar tail = function (as) { return as.slice(1); };\nexports.tail = tail;\n// -------------------------------------------------------------------------------------\n// empty\n// -------------------------------------------------------------------------------------\n/** @internal */\nexports.emptyReadonlyArray = [];\n/** @internal */\nexports.emptyRecord = {};\n// -------------------------------------------------------------------------------------\n// Record\n// -------------------------------------------------------------------------------------\n/** @internal */\nexports.has = Object.prototype.hasOwnProperty;\n// -------------------------------------------------------------------------------------\n// NonEmptyArray\n// -------------------------------------------------------------------------------------\n/** @internal */\nvar fromReadonlyNonEmptyArray = function (as) { return __spreadArray([as[0]], as.slice(1)); };\nexports.fromReadonlyNonEmptyArray = fromReadonlyNonEmptyArray;\n", "\"use strict\";\n/**\n * The `FromEither` type class represents those data types which support errors.\n *\n * @since 2.10.0\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.filterOrElse = exports.chainEitherK = exports.fromEitherK = exports.chainOptionK = exports.fromOptionK = exports.fromPredicate = exports.fromOption = void 0;\nvar function_1 = require(\"./function\");\nvar _ = __importStar(require(\"./internal\"));\nfunction fromOption(F) {\n    return function (onNone) { return function (ma) { return F.fromEither(_.isNone(ma) ? _.left(onNone()) : _.right(ma.value)); }; };\n}\nexports.fromOption = fromOption;\nfunction fromPredicate(F) {\n    return function (predicate, onFalse) { return function (a) {\n        return F.fromEither(predicate(a) ? _.right(a) : _.left(onFalse(a)));\n    }; };\n}\nexports.fromPredicate = fromPredicate;\nfunction fromOptionK(F) {\n    var fromOptionF = fromOption(F);\n    return function (onNone) {\n        var from = fromOptionF(onNone);\n        return function (f) { return function_1.flow(f, from); };\n    };\n}\nexports.fromOptionK = fromOptionK;\nfunction chainOptionK(F, M) {\n    var fromOptionKF = fromOptionK(F);\n    return function (onNone) {\n        var from = fromOptionKF(onNone);\n        return function (f) { return function (ma) { return M.chain(ma, from(f)); }; };\n    };\n}\nexports.chainOptionK = chainOptionK;\nfunction fromEitherK(F) {\n    return function (f) { return function_1.flow(f, F.fromEither); };\n}\nexports.fromEitherK = fromEitherK;\nfunction chainEitherK(F, M) {\n    var fromEitherKF = fromEitherK(F);\n    return function (f) { return function (ma) { return M.chain(ma, fromEitherKF(f)); }; };\n}\nexports.chainEitherK = chainEitherK;\nfunction filterOrElse(F, M) {\n    return function (predicate, onFalse) { return function (ma) {\n        return M.chain(ma, function (a) { return F.fromEither(predicate(a) ? _.right(a) : _.left(onFalse(a))); });\n    }; };\n}\nexports.filterOrElse = filterOrElse;\n", "\"use strict\";\n/**\n * ```ts\n * interface Separated<E, A> {\n *    readonly left: E\n *    readonly right: A\n * }\n * ```\n *\n * Represents a result of separating a whole into two parts.\n *\n * @since 2.10.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.right = exports.left = exports.flap = exports.Functor = exports.Bifunctor = exports.URI = exports.bimap = exports.mapLeft = exports.map = exports.separated = void 0;\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.10.0\n */\nvar separated = function (left, right) { return ({ left: left, right: right }); };\nexports.separated = separated;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar _map = function (fa, f) { return function_1.pipe(fa, exports.map(f)); };\nvar _mapLeft = function (fa, f) { return function_1.pipe(fa, exports.mapLeft(f)); };\nvar _bimap = function (fa, g, f) { return function_1.pipe(fa, exports.bimap(g, f)); };\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.10.0\n */\nvar map = function (f) { return function (fa) {\n    return exports.separated(exports.left(fa), f(exports.right(fa)));\n}; };\nexports.map = map;\n/**\n * Map a function over the first type argument of a bifunctor.\n *\n * @category Bifunctor\n * @since 2.10.0\n */\nvar mapLeft = function (f) { return function (fa) {\n    return exports.separated(f(exports.left(fa)), exports.right(fa));\n}; };\nexports.mapLeft = mapLeft;\n/**\n * Map a pair of functions over the two type arguments of the bifunctor.\n *\n * @category Bifunctor\n * @since 2.10.0\n */\nvar bimap = function (f, g) { return function (fa) {\n    return exports.separated(f(exports.left(fa)), g(exports.right(fa)));\n}; };\nexports.bimap = bimap;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.URI = 'Separated';\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Bifunctor = {\n    URI: exports.URI,\n    mapLeft: _mapLeft,\n    bimap: _bimap\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.flap = \n/*#__PURE__*/\nFunctor_1.flap(exports.Functor);\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.10.0\n */\nvar left = function (s) { return s.left; };\nexports.left = left;\n/**\n * @since 2.10.0\n */\nvar right = function (s) { return s.right; };\nexports.right = right;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.filterE = exports.witherDefault = exports.wiltDefault = void 0;\nvar _ = __importStar(require(\"./internal\"));\nfunction wiltDefault(T, C) {\n    return function (F) {\n        var traverseF = T.traverse(F);\n        return function (wa, f) { return F.map(traverseF(wa, f), C.separate); };\n    };\n}\nexports.wiltDefault = wiltDefault;\nfunction witherDefault(T, C) {\n    return function (F) {\n        var traverseF = T.traverse(F);\n        return function (wa, f) { return F.map(traverseF(wa, f), C.compact); };\n    };\n}\nexports.witherDefault = witherDefault;\nfunction filterE(W) {\n    return function (F) {\n        var witherF = W.wither(F);\n        return function (predicate) { return function (ga) { return witherF(ga, function (a) { return F.map(predicate(a), function (b) { return (b ? _.some(a) : _.none); }); }); }; };\n    };\n}\nexports.filterE = filterE;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fold = exports.match = exports.foldW = exports.matchW = exports.isRight = exports.isLeft = exports.fromOption = exports.fromPredicate = exports.FromEither = exports.MonadThrow = exports.throwError = exports.ChainRec = exports.Extend = exports.extend = exports.Alt = exports.alt = exports.altW = exports.Bifunctor = exports.mapLeft = exports.bimap = exports.Traversable = exports.sequence = exports.traverse = exports.Foldable = exports.reduceRight = exports.foldMap = exports.reduce = exports.Monad = exports.Chain = exports.chain = exports.chainW = exports.Applicative = exports.Apply = exports.ap = exports.apW = exports.Pointed = exports.of = exports.Functor = exports.map = exports.getAltValidation = exports.getApplicativeValidation = exports.getWitherable = exports.getFilterable = exports.getCompactable = exports.getSemigroup = exports.getEq = exports.getShow = exports.URI = exports.right = exports.left = void 0;\nexports.getValidation = exports.getValidationMonoid = exports.getValidationSemigroup = exports.getApplyMonoid = exports.getApplySemigroup = exports.either = exports.stringifyJSON = exports.parseJSON = exports.sequenceArray = exports.traverseArray = exports.traverseArrayWithIndex = exports.traverseReadonlyArrayWithIndex = exports.traverseReadonlyNonEmptyArrayWithIndex = exports.ApT = exports.apSW = exports.apS = exports.bindW = exports.bind = exports.bindTo = exports.Do = exports.exists = exports.elem = exports.toError = exports.toUnion = exports.chainNullableK = exports.fromNullableK = exports.tryCatchK = exports.tryCatch = exports.fromNullable = exports.orElse = exports.orElseW = exports.swap = exports.filterOrElseW = exports.filterOrElse = exports.chainOptionK = exports.fromOptionK = exports.duplicate = exports.flatten = exports.flattenW = exports.chainFirstW = exports.chainFirst = exports.apSecond = exports.apFirst = exports.flap = exports.getOrElse = exports.getOrElseW = void 0;\nvar Applicative_1 = require(\"./Applicative\");\nvar Apply_1 = require(\"./Apply\");\nvar Chain_1 = require(\"./Chain\");\nvar ChainRec_1 = require(\"./ChainRec\");\nvar FromEither_1 = require(\"./FromEither\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar _ = __importStar(require(\"./internal\"));\nvar Separated_1 = require(\"./Separated\");\nvar Witherable_1 = require(\"./Witherable\");\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Constructs a new `Either` holding a `Left` value. This usually represents a failure, due to the right-bias of this\n * structure.\n *\n * @category constructors\n * @since 2.0.0\n */\nexports.left = _.left;\n/**\n * Constructs a new `Either` holding a `Right` value. This usually represents a successful value due to the right bias\n * of this structure.\n *\n * @category constructors\n * @since 2.0.0\n */\nexports.right = _.right;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar _map = function (fa, f) { return function_1.pipe(fa, exports.map(f)); };\nvar _ap = function (fab, fa) { return function_1.pipe(fab, exports.ap(fa)); };\n/* istanbul ignore next */\nvar _chain = function (ma, f) { return function_1.pipe(ma, exports.chain(f)); };\n/* istanbul ignore next */\nvar _reduce = function (fa, b, f) { return function_1.pipe(fa, exports.reduce(b, f)); };\n/* istanbul ignore next */\nvar _foldMap = function (M) { return function (fa, f) {\n    var foldMapM = exports.foldMap(M);\n    return function_1.pipe(fa, foldMapM(f));\n}; };\n/* istanbul ignore next */\nvar _reduceRight = function (fa, b, f) { return function_1.pipe(fa, exports.reduceRight(b, f)); };\nvar _traverse = function (F) {\n    var traverseF = exports.traverse(F);\n    return function (ta, f) { return function_1.pipe(ta, traverseF(f)); };\n};\nvar _bimap = function (fa, f, g) { return function_1.pipe(fa, exports.bimap(f, g)); };\nvar _mapLeft = function (fa, f) { return function_1.pipe(fa, exports.mapLeft(f)); };\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return function_1.pipe(fa, exports.alt(that)); };\n/* istanbul ignore next */\nvar _extend = function (wa, f) { return function_1.pipe(wa, exports.extend(f)); };\nvar _chainRec = function (a, f) {\n    return ChainRec_1.tailRec(f(a), function (e) {\n        return exports.isLeft(e) ? exports.right(exports.left(e.left)) : exports.isLeft(e.right) ? exports.left(f(e.right.left)) : exports.right(exports.right(e.right.right));\n    });\n};\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.URI = 'Either';\n/**\n * @category instances\n * @since 2.0.0\n */\nvar getShow = function (SE, SA) { return ({\n    show: function (ma) { return (exports.isLeft(ma) ? \"left(\" + SE.show(ma.left) + \")\" : \"right(\" + SA.show(ma.right) + \")\"); }\n}); };\nexports.getShow = getShow;\n/**\n * @category instances\n * @since 2.0.0\n */\nvar getEq = function (EL, EA) { return ({\n    equals: function (x, y) {\n        return x === y || (exports.isLeft(x) ? exports.isLeft(y) && EL.equals(x.left, y.left) : exports.isRight(y) && EA.equals(x.right, y.right));\n    }\n}); };\nexports.getEq = getEq;\n/**\n * Semigroup returning the left-most non-`Left` value. If both operands are `Right`s then the inner values are\n * concatenated using the provided `Semigroup`\n *\n * @example\n * import { getSemigroup, left, right } from 'fp-ts/Either'\n * import { SemigroupSum } from 'fp-ts/number'\n *\n * const S = getSemigroup<string, number>(SemigroupSum)\n * assert.deepStrictEqual(S.concat(left('a'), left('b')), left('a'))\n * assert.deepStrictEqual(S.concat(left('a'), right(2)), right(2))\n * assert.deepStrictEqual(S.concat(right(1), left('b')), right(1))\n * assert.deepStrictEqual(S.concat(right(1), right(2)), right(3))\n *\n * @category instances\n * @since 2.0.0\n */\nvar getSemigroup = function (S) { return ({\n    concat: function (x, y) { return (exports.isLeft(y) ? x : exports.isLeft(x) ? y : exports.right(S.concat(x.right, y.right))); }\n}); };\nexports.getSemigroup = getSemigroup;\n/**\n * Builds a `Compactable` instance for `Either` given `Monoid` for the left side.\n *\n * @category instances\n * @since 2.10.0\n */\nvar getCompactable = function (M) {\n    var empty = exports.left(M.empty);\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        compact: function (ma) { return (exports.isLeft(ma) ? ma : ma.right._tag === 'None' ? empty : exports.right(ma.right.value)); },\n        separate: function (ma) {\n            return exports.isLeft(ma)\n                ? Separated_1.separated(ma, ma)\n                : exports.isLeft(ma.right)\n                    ? Separated_1.separated(exports.right(ma.right.left), empty)\n                    : Separated_1.separated(empty, exports.right(ma.right.right));\n        }\n    };\n};\nexports.getCompactable = getCompactable;\n/**\n * Builds a `Filterable` instance for `Either` given `Monoid` for the left side\n *\n * @category instances\n * @since 2.10.0\n */\nvar getFilterable = function (M) {\n    var empty = exports.left(M.empty);\n    var _a = exports.getCompactable(M), compact = _a.compact, separate = _a.separate;\n    var filter = function (ma, predicate) {\n        return exports.isLeft(ma) ? ma : predicate(ma.right) ? ma : empty;\n    };\n    var partition = function (ma, p) {\n        return exports.isLeft(ma)\n            ? Separated_1.separated(ma, ma)\n            : p(ma.right)\n                ? Separated_1.separated(empty, exports.right(ma.right))\n                : Separated_1.separated(exports.right(ma.right), empty);\n    };\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        compact: compact,\n        separate: separate,\n        filter: filter,\n        filterMap: function (ma, f) {\n            if (exports.isLeft(ma)) {\n                return ma;\n            }\n            var ob = f(ma.right);\n            return ob._tag === 'None' ? empty : exports.right(ob.value);\n        },\n        partition: partition,\n        partitionMap: function (ma, f) {\n            if (exports.isLeft(ma)) {\n                return Separated_1.separated(ma, ma);\n            }\n            var e = f(ma.right);\n            return exports.isLeft(e) ? Separated_1.separated(exports.right(e.left), empty) : Separated_1.separated(empty, exports.right(e.right));\n        }\n    };\n};\nexports.getFilterable = getFilterable;\n/**\n * Builds `Witherable` instance for `Either` given `Monoid` for the left side\n *\n * @category instances\n * @since 2.0.0\n */\nvar getWitherable = function (M) {\n    var F_ = exports.getFilterable(M);\n    var C = exports.getCompactable(M);\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        compact: F_.compact,\n        separate: F_.separate,\n        filter: F_.filter,\n        filterMap: F_.filterMap,\n        partition: F_.partition,\n        partitionMap: F_.partitionMap,\n        traverse: _traverse,\n        sequence: exports.sequence,\n        reduce: _reduce,\n        foldMap: _foldMap,\n        reduceRight: _reduceRight,\n        wither: Witherable_1.witherDefault(exports.Traversable, C),\n        wilt: Witherable_1.wiltDefault(exports.Traversable, C)\n    };\n};\nexports.getWitherable = getWitherable;\n/**\n * @category instances\n * @since 2.7.0\n */\nvar getApplicativeValidation = function (SE) { return ({\n    URI: exports.URI,\n    _E: undefined,\n    map: _map,\n    ap: function (fab, fa) {\n        return exports.isLeft(fab)\n            ? exports.isLeft(fa)\n                ? exports.left(SE.concat(fab.left, fa.left))\n                : fab\n            : exports.isLeft(fa)\n                ? fa\n                : exports.right(fab.right(fa.right));\n    },\n    of: exports.of\n}); };\nexports.getApplicativeValidation = getApplicativeValidation;\n/**\n * @category instances\n * @since 2.7.0\n */\nvar getAltValidation = function (SE) { return ({\n    URI: exports.URI,\n    _E: undefined,\n    map: _map,\n    alt: function (me, that) {\n        if (exports.isRight(me)) {\n            return me;\n        }\n        var ea = that();\n        return exports.isLeft(ea) ? exports.left(SE.concat(me.left, ea.left)) : ea;\n    }\n}); };\nexports.getAltValidation = getAltValidation;\n/**\n * @category instance operations\n * @since 2.0.0\n */\nvar map = function (f) { return function (fa) {\n    return exports.isLeft(fa) ? fa : exports.right(f(fa.right));\n}; };\nexports.map = map;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * @category instance operations\n * @since 2.7.0\n */\nexports.of = exports.right;\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Pointed = {\n    URI: exports.URI,\n    of: exports.of\n};\n/**\n * Less strict version of [`ap`](#ap).\n *\n * @category instance operations\n * @since 2.8.0\n */\nvar apW = function (fa) { return function (fab) { return (exports.isLeft(fab) ? fab : exports.isLeft(fa) ? fa : exports.right(fab.right(fa.right))); }; };\nexports.apW = apW;\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @category instance operations\n * @since 2.0.0\n */\nexports.ap = exports.apW;\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Apply = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Applicative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of\n};\n/**\n * Less strict version of [`chain`](#chain).\n *\n * @category instance operations\n * @since 2.6.0\n */\nvar chainW = function (f) { return function (ma) {\n    return exports.isLeft(ma) ? ma : f(ma.right);\n}; };\nexports.chainW = chainW;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category instance operations\n * @since 2.0.0\n */\nexports.chain = exports.chainW;\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Chain = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Monad = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain\n};\n/**\n * Left-associative fold of a structure.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as E from 'fp-ts/Either'\n *\n * const startWith = 'prefix'\n * const concat = (a: string, b: string) => `${a}:${b}`\n *\n * assert.deepStrictEqual(\n *   pipe(E.right('a'), E.reduce(startWith, concat)),\n *   'prefix:a'\n * )\n *\n * assert.deepStrictEqual(\n *   pipe(E.left('e'), E.reduce(startWith, concat)),\n *   'prefix'\n * )\n *\n * @category instance operations\n * @since 2.0.0\n */\nvar reduce = function (b, f) { return function (fa) {\n    return exports.isLeft(fa) ? b : f(b, fa.right);\n}; };\nexports.reduce = reduce;\n/**\n * Map each element of the structure to a monoid, and combine the results.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as E from 'fp-ts/Either'\n * import * as S from 'fp-ts/string'\n *\n * const yell = (a: string) => `${a}!`\n *\n * assert.deepStrictEqual(\n *   pipe(E.right('a'), E.foldMap(S.Monoid)(yell)),\n *   'a!'\n * )\n *\n * assert.deepStrictEqual(\n *   pipe(E.left('e'), E.foldMap(S.Monoid)(yell)),\n *   S.Monoid.empty\n * )\n *\n * @category instance operations\n * @since 2.0.0\n */\nvar foldMap = function (M) { return function (f) { return function (fa) {\n    return exports.isLeft(fa) ? M.empty : f(fa.right);\n}; }; };\nexports.foldMap = foldMap;\n/**\n * Right-associative fold of a structure.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as E from 'fp-ts/Either'\n *\n * const startWith = 'postfix'\n * const concat = (a: string, b: string) => `${a}:${b}`\n *\n * assert.deepStrictEqual(\n *   pipe(E.right('a'), E.reduceRight(startWith, concat)),\n *   'a:postfix'\n * )\n *\n * assert.deepStrictEqual(\n *   pipe(E.left('e'), E.reduceRight(startWith, concat)),\n *   'postfix'\n * )\n *\n * @category instance operations\n * @since 2.0.0\n */\nvar reduceRight = function (b, f) { return function (fa) {\n    return exports.isLeft(fa) ? b : f(fa.right, b);\n}; };\nexports.reduceRight = reduceRight;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Foldable = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * Map each element of a structure to an action, evaluate these actions from left to right, and collect the results.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import * as E from 'fp-ts/Either'\n * import * as O from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   pipe(E.right(['a']), E.traverse(O.Applicative)(RA.head)),\n *   O.some(E.right('a'))\n *  )\n *\n * assert.deepStrictEqual(\n *   pipe(E.right([]), E.traverse(O.Applicative)(RA.head)),\n *   O.none\n * )\n *\n * @category instance operations\n * @since 2.6.3\n */\nvar traverse = function (F) { return function (f) { return function (ta) { return (exports.isLeft(ta) ? F.of(exports.left(ta.left)) : F.map(f(ta.right), exports.right)); }; }; };\nexports.traverse = traverse;\n/**\n * Evaluate each monadic action in the structure from left to right, and collect the results.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as E from 'fp-ts/Either'\n * import * as O from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   pipe(E.right(O.some('a')), E.sequence(O.Applicative)),\n *   O.some(E.right('a'))\n *  )\n *\n * assert.deepStrictEqual(\n *   pipe(E.right(O.none), E.sequence(O.Applicative)),\n *   O.none\n * )\n *\n * @category instance operations\n * @since 2.6.3\n */\nvar sequence = function (F) { return function (ma) {\n    return exports.isLeft(ma) ? F.of(exports.left(ma.left)) : F.map(ma.right, exports.right);\n}; };\nexports.sequence = sequence;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Traversable = {\n    URI: exports.URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence\n};\n/**\n * Map a pair of functions over the two type arguments of the bifunctor.\n *\n * @category instance operations\n * @since 2.0.0\n */\nvar bimap = function (f, g) { return function (fa) { return (exports.isLeft(fa) ? exports.left(f(fa.left)) : exports.right(g(fa.right))); }; };\nexports.bimap = bimap;\n/**\n * Map a function over the first type argument of a bifunctor.\n *\n * @category instance operations\n * @since 2.0.0\n */\nvar mapLeft = function (f) { return function (fa) {\n    return exports.isLeft(fa) ? exports.left(f(fa.left)) : fa;\n}; };\nexports.mapLeft = mapLeft;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Bifunctor = {\n    URI: exports.URI,\n    bimap: _bimap,\n    mapLeft: _mapLeft\n};\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category instance operations\n * @since 2.9.0\n */\nvar altW = function (that) { return function (fa) { return (exports.isLeft(fa) ? that() : fa); }; };\nexports.altW = altW;\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * @category instance operations\n * @since 2.0.0\n */\nexports.alt = exports.altW;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alt = {\n    URI: exports.URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @category instance operations\n * @since 2.0.0\n */\nvar extend = function (f) { return function (wa) {\n    return exports.isLeft(wa) ? wa : exports.right(f(wa));\n}; };\nexports.extend = extend;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Extend = {\n    URI: exports.URI,\n    map: _map,\n    extend: _extend\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.ChainRec = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain,\n    chainRec: _chainRec\n};\n/**\n * @category instance operations\n * @since 2.6.3\n */\nexports.throwError = exports.left;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.MonadThrow = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain,\n    throwError: exports.throwError\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.FromEither = {\n    URI: exports.URI,\n    fromEither: function_1.identity\n};\n/**\n * @example\n * import { fromPredicate, left, right } from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     1,\n *     fromPredicate(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   right(1)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     -1,\n *     fromPredicate(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   left('error')\n * )\n *\n * @category constructors\n * @since 2.0.0\n */\nexports.fromPredicate = \n/*#__PURE__*/\nFromEither_1.fromPredicate(exports.FromEither);\n// -------------------------------------------------------------------------------------\n// natural transformations\n// -------------------------------------------------------------------------------------\n/**\n * @example\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n * import * as O from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     O.some(1),\n *     E.fromOption(() => 'error')\n *   ),\n *   E.right(1)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     O.none,\n *     E.fromOption(() => 'error')\n *   ),\n *   E.left('error')\n * )\n *\n * @category natural transformations\n * @since 2.0.0\n */\nexports.fromOption = \n/*#__PURE__*/\nFromEither_1.fromOption(exports.FromEither);\n// -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n/**\n * Returns `true` if the either is an instance of `Left`, `false` otherwise.\n *\n * @category refinements\n * @since 2.0.0\n */\nexports.isLeft = _.isLeft;\n/**\n * Returns `true` if the either is an instance of `Right`, `false` otherwise.\n *\n * @category refinements\n * @since 2.0.0\n */\nexports.isRight = _.isRight;\n// -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n/**\n * Less strict version of [`match`](#match).\n *\n * @category destructors\n * @since 2.10.0\n */\nvar matchW = function (onLeft, onRight) { return function (ma) {\n    return exports.isLeft(ma) ? onLeft(ma.left) : onRight(ma.right);\n}; };\nexports.matchW = matchW;\n/**\n * Alias of [`matchW`](#matchw).\n *\n * @category destructors\n * @since 2.10.0\n */\nexports.foldW = exports.matchW;\n/**\n * Takes two functions and an `Either` value, if the value is a `Left` the inner value is applied to the first function,\n * if the value is a `Right` the inner value is applied to the second function.\n *\n * @example\n * import { match, left, right } from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * function onLeft(errors: Array<string>): string {\n *   return `Errors: ${errors.join(', ')}`\n * }\n *\n * function onRight(value: number): string {\n *   return `Ok: ${value}`\n * }\n *\n * assert.strictEqual(\n *   pipe(\n *     right(1),\n *     match(onLeft, onRight)\n *   ),\n *   'Ok: 1'\n * )\n * assert.strictEqual(\n *   pipe(\n *     left(['error 1', 'error 2']),\n *     match(onLeft, onRight)\n *   ),\n *   'Errors: error 1, error 2'\n * )\n *\n * @category destructors\n * @since 2.10.0\n */\nexports.match = exports.matchW;\n/**\n * Alias of [`match`](#match).\n *\n * @category destructors\n * @since 2.0.0\n */\nexports.fold = exports.match;\n/**\n * Less strict version of [`getOrElse`](#getorelse).\n *\n * @category destructors\n * @since 2.6.0\n */\nvar getOrElseW = function (onLeft) { return function (ma) {\n    return exports.isLeft(ma) ? onLeft(ma.left) : ma.right;\n}; };\nexports.getOrElseW = getOrElseW;\n/**\n * Returns the wrapped value if it's a `Right` or a default value if is a `Left`.\n *\n * @example\n * import { getOrElse, left, right } from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     right(1),\n *     getOrElse(() => 0)\n *   ),\n *   1\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     left('error'),\n *     getOrElse(() => 0)\n *   ),\n *   0\n * )\n *\n * @category destructors\n * @since 2.0.0\n */\nexports.getOrElse = exports.getOrElseW;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.flap = \n/*#__PURE__*/\nFunctor_1.flap(exports.Functor);\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.apFirst = \n/*#__PURE__*/\nApply_1.apFirst(exports.Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.apSecond = \n/*#__PURE__*/\nApply_1.apSecond(exports.Apply);\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.chainFirst = \n/*#__PURE__*/\nChain_1.chainFirst(exports.Chain);\n/**\n * Less strict version of [`chainFirst`](#chainfirst)\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.8.0\n */\nexports.chainFirstW = exports.chainFirst;\n/**\n * Less strict version of [`flatten`](#flatten).\n *\n * @category combinators\n * @since 2.11.0\n */\nexports.flattenW = \n/*#__PURE__*/\nexports.chainW(function_1.identity);\n/**\n * The `flatten` function is the conventional monad join operator. It is used to remove one level of monadic structure, projecting its bound argument into the outer level.\n *\n * Derivable from `Chain`.\n *\n * @example\n * import * as E from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(E.flatten(E.right(E.right('a'))), E.right('a'))\n * assert.deepStrictEqual(E.flatten(E.right(E.left('e'))), E.left('e'))\n * assert.deepStrictEqual(E.flatten(E.left('e')), E.left('e'))\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.flatten = exports.flattenW;\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.duplicate = \n/*#__PURE__*/\nexports.extend(function_1.identity);\n/**\n * @category combinators\n * @since 2.10.0\n */\nexports.fromOptionK = \n/*#__PURE__*/\nFromEither_1.fromOptionK(exports.FromEither);\n/**\n * @category combinators\n * @since 2.11.0\n */\nexports.chainOptionK = \n/*#__PURE__*/\nFromEither_1.chainOptionK(exports.FromEither, exports.Chain);\n/**\n * @example\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     E.right(1),\n *     E.filterOrElse(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   E.right(1)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     E.right(-1),\n *     E.filterOrElse(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   E.left('error')\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     E.left('a'),\n *     E.filterOrElse(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   E.left('a')\n * )\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.filterOrElse = \n/*#__PURE__*/\nFromEither_1.filterOrElse(exports.FromEither, exports.Chain);\n/**\n * Less strict version of [`filterOrElse`](#filterorelse).\n *\n * @category combinators\n * @since 2.9.0\n */\nexports.filterOrElseW = exports.filterOrElse;\n/**\n * Returns a `Right` if is a `Left` (and vice versa).\n *\n * @category combinators\n * @since 2.0.0\n */\nvar swap = function (ma) { return (exports.isLeft(ma) ? exports.right(ma.left) : exports.left(ma.right)); };\nexports.swap = swap;\n/**\n * Less strict version of [`orElse`](#orelse).\n *\n * @category combinators\n * @since 2.10.0\n */\nvar orElseW = function (onLeft) { return function (ma) {\n    return exports.isLeft(ma) ? onLeft(ma.left) : ma;\n}; };\nexports.orElseW = orElseW;\n/**\n * Useful for recovering from errors.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.orElse = exports.orElseW;\n// -------------------------------------------------------------------------------------\n// interop\n// -------------------------------------------------------------------------------------\n/**\n * Takes a default and a nullable value, if the value is not nully, turn it into a `Right`, if the value is nully use\n * the provided default as a `Left`.\n *\n * @example\n * import { fromNullable, left, right } from 'fp-ts/Either'\n *\n * const parse = fromNullable('nully')\n *\n * assert.deepStrictEqual(parse(1), right(1))\n * assert.deepStrictEqual(parse(null), left('nully'))\n *\n * @category interop\n * @since 2.0.0\n */\nvar fromNullable = function (e) { return function (a) {\n    return a == null ? exports.left(e) : exports.right(a);\n}; };\nexports.fromNullable = fromNullable;\n/**\n * Constructs a new `Either` from a function that might throw.\n *\n * See also [`tryCatchK`](#trycatchk).\n *\n * @example\n * import * as E from 'fp-ts/Either'\n *\n * const unsafeHead = <A>(as: ReadonlyArray<A>): A => {\n *   if (as.length > 0) {\n *     return as[0]\n *   } else {\n *     throw new Error('empty array')\n *   }\n * }\n *\n * const head = <A>(as: ReadonlyArray<A>): E.Either<Error, A> =>\n *   E.tryCatch(() => unsafeHead(as), e => (e instanceof Error ? e : new Error('unknown error')))\n *\n * assert.deepStrictEqual(head([]), E.left(new Error('empty array')))\n * assert.deepStrictEqual(head([1, 2, 3]), E.right(1))\n *\n * @category interop\n * @since 2.0.0\n */\nvar tryCatch = function (f, onThrow) {\n    try {\n        return exports.right(f());\n    }\n    catch (e) {\n        return exports.left(onThrow(e));\n    }\n};\nexports.tryCatch = tryCatch;\n/**\n * Converts a function that may throw to one returning a `Either`.\n *\n * @category interop\n * @since 2.10.0\n */\nvar tryCatchK = function (f, onThrow) { return function () {\n    var a = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        a[_i] = arguments[_i];\n    }\n    return exports.tryCatch(function () { return f.apply(void 0, a); }, onThrow);\n}; };\nexports.tryCatchK = tryCatchK;\n/**\n * @category interop\n * @since 2.9.0\n */\nvar fromNullableK = function (e) {\n    var from = exports.fromNullable(e);\n    return function (f) { return function_1.flow(f, from); };\n};\nexports.fromNullableK = fromNullableK;\n/**\n * @category interop\n * @since 2.9.0\n */\nvar chainNullableK = function (e) {\n    var from = exports.fromNullableK(e);\n    return function (f) { return exports.chain(from(f)); };\n};\nexports.chainNullableK = chainNullableK;\n/**\n * @category interop\n * @since 2.10.0\n */\nexports.toUnion = \n/*#__PURE__*/\nexports.foldW(function_1.identity, function_1.identity);\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * Default value for the `onError` argument of `tryCatch`\n *\n * @since 2.0.0\n */\nfunction toError(e) {\n    return e instanceof Error ? e : new Error(String(e));\n}\nexports.toError = toError;\nfunction elem(E) {\n    return function (a, ma) {\n        if (ma === undefined) {\n            var elemE_1 = elem(E);\n            return function (ma) { return elemE_1(a, ma); };\n        }\n        return exports.isLeft(ma) ? false : E.equals(a, ma.right);\n    };\n}\nexports.elem = elem;\n/**\n * Returns `false` if `Left` or returns the result of the application of the given predicate to the `Right` value.\n *\n * @example\n * import { exists, left, right } from 'fp-ts/Either'\n *\n * const gt2 = exists((n: number) => n > 2)\n *\n * assert.strictEqual(gt2(left('a')), false)\n * assert.strictEqual(gt2(right(1)), false)\n * assert.strictEqual(gt2(right(3)), true)\n *\n * @since 2.0.0\n */\nvar exists = function (predicate) { return function (ma) {\n    return exports.isLeft(ma) ? false : predicate(ma.right);\n}; };\nexports.exists = exists;\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexports.Do = \n/*#__PURE__*/\nexports.of(_.emptyRecord);\n/**\n * @since 2.8.0\n */\nexports.bindTo = \n/*#__PURE__*/\nFunctor_1.bindTo(exports.Functor);\n/**\n * @since 2.8.0\n */\nexports.bind = \n/*#__PURE__*/\nChain_1.bind(exports.Chain);\n/**\n * @since 2.8.0\n */\nexports.bindW = exports.bind;\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexports.apS = \n/*#__PURE__*/\nApply_1.apS(exports.Apply);\n/**\n * @since 2.8.0\n */\nexports.apSW = exports.apS;\n// -------------------------------------------------------------------------------------\n// sequence T\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.11.0\n */\nexports.ApT = \n/*#__PURE__*/\nexports.of(_.emptyReadonlyArray);\n// -------------------------------------------------------------------------------------\n// array utils\n// -------------------------------------------------------------------------------------\n/**\n * Equivalent to `ReadonlyNonEmptyArray#traverseWithIndex(Applicative)`.\n *\n * @since 2.11.0\n */\nvar traverseReadonlyNonEmptyArrayWithIndex = function (f) { return function (as) {\n    var e = f(0, _.head(as));\n    if (exports.isLeft(e)) {\n        return e;\n    }\n    var out = [e.right];\n    for (var i = 1; i < as.length; i++) {\n        var e_1 = f(i, as[i]);\n        if (exports.isLeft(e_1)) {\n            return e_1;\n        }\n        out.push(e_1.right);\n    }\n    return exports.right(out);\n}; };\nexports.traverseReadonlyNonEmptyArrayWithIndex = traverseReadonlyNonEmptyArrayWithIndex;\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(Applicative)`.\n *\n * @since 2.11.0\n */\nvar traverseReadonlyArrayWithIndex = function (f) {\n    var g = exports.traverseReadonlyNonEmptyArrayWithIndex(f);\n    return function (as) { return (_.isNonEmpty(as) ? g(as) : exports.ApT); };\n};\nexports.traverseReadonlyArrayWithIndex = traverseReadonlyArrayWithIndex;\n/**\n * @since 2.9.0\n */\nexports.traverseArrayWithIndex = exports.traverseReadonlyArrayWithIndex;\n/**\n * @since 2.9.0\n */\nvar traverseArray = function (f) { return exports.traverseReadonlyArrayWithIndex(function (_, a) { return f(a); }); };\nexports.traverseArray = traverseArray;\n/**\n * @since 2.9.0\n */\nexports.sequenceArray = \n/*#__PURE__*/\nexports.traverseArray(function_1.identity);\n/**\n * Use [`parse`](./Json.ts.html#parse) instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\nfunction parseJSON(s, onError) {\n    return exports.tryCatch(function () { return JSON.parse(s); }, onError);\n}\nexports.parseJSON = parseJSON;\n/**\n * Use [`stringify`](./Json.ts.html#stringify) instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\nvar stringifyJSON = function (u, onError) {\n    return exports.tryCatch(function () {\n        var s = JSON.stringify(u);\n        if (typeof s !== 'string') {\n            throw new Error('Converting unsupported structure to JSON');\n        }\n        return s;\n    }, onError);\n};\nexports.stringifyJSON = stringifyJSON;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.either = {\n    URI: exports.URI,\n    map: _map,\n    of: exports.of,\n    ap: _ap,\n    chain: _chain,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    bimap: _bimap,\n    mapLeft: _mapLeft,\n    alt: _alt,\n    extend: _extend,\n    chainRec: _chainRec,\n    throwError: exports.throwError\n};\n/**\n * Use [`getApplySemigroup`](./Apply.ts.html#getapplysemigroup) instead.\n *\n * Semigroup returning the left-most `Left` value. If both operands are `Right`s then the inner values\n * are concatenated using the provided `Semigroup`\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.getApplySemigroup = \n/*#__PURE__*/\nApply_1.getApplySemigroup(exports.Apply);\n/**\n * Use [`getApplicativeMonoid`](./Applicative.ts.html#getapplicativemonoid) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.getApplyMonoid = \n/*#__PURE__*/\nApplicative_1.getApplicativeMonoid(exports.Applicative);\n/**\n * Use [`getApplySemigroup`](./Apply.ts.html#getapplysemigroup) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nvar getValidationSemigroup = function (SE, SA) {\n    return Apply_1.getApplySemigroup(exports.getApplicativeValidation(SE))(SA);\n};\nexports.getValidationSemigroup = getValidationSemigroup;\n/**\n * Use [`getApplicativeMonoid`](./Applicative.ts.html#getapplicativemonoid) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nvar getValidationMonoid = function (SE, MA) {\n    return Applicative_1.getApplicativeMonoid(exports.getApplicativeValidation(SE))(MA);\n};\nexports.getValidationMonoid = getValidationMonoid;\n/**\n * Use [`getApplicativeValidation`](#getapplicativevalidation) and [`getAltValidation`](#getaltvalidation) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nfunction getValidation(SE) {\n    var ap = exports.getApplicativeValidation(SE).ap;\n    var alt = exports.getAltValidation(SE).alt;\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        of: exports.of,\n        chain: _chain,\n        bimap: _bimap,\n        mapLeft: _mapLeft,\n        reduce: _reduce,\n        foldMap: _foldMap,\n        reduceRight: _reduceRight,\n        extend: _extend,\n        traverse: _traverse,\n        sequence: exports.sequence,\n        chainRec: _chainRec,\n        throwError: exports.throwError,\n        ap: ap,\n        alt: alt\n    };\n}\nexports.getValidation = getValidation;\n", "import { chain, fold } from 'fp-ts/Either'\nimport { pipe } from 'fp-ts/function'\nimport { APIGatewayEvent, Context } from 'aws-lambda'\nimport { ApplicationError, StatusCodes, errorResponse, successResponse } from \"./http\"\nimport { Either, left, right } from \"fp-ts/Either\";\nimport { fastModularExponentiation, longToBytes, onlyDigits, calculateHash, onlyHexaDecimal } from \"./helpers\"\n\ntype VerifySignatureParameters = {\n    m: string\n    e: string\n    n: string\n    signature: string\n};\n\nconst convertAPIEventToVerifySignatureParameters = (event: APIGatewayEvent) => {\n    return right<ApplicationError, VerifySignatureParameters>({\n        e: event.queryStringParameters.e,\n        m: event.queryStringParameters.m,\n        n: event.queryStringParameters.n,\n        signature: event.queryStringParameters.signature,\n    });\n}\n\nconst paramsNotNull = (event: APIGatewayEvent) => {\n    if(event.queryStringParameters.m == null || event.queryStringParameters.e == null || event.queryStringParameters.n == null || event.queryStringParameters.signature == null)    {\n        return left<ApplicationError, APIGatewayEvent>(\n            new ApplicationError(\n                'Error parsing query parameters',\n                ['Query params should not be empty'],\n                StatusCodes.BAD_REQUEST\n            )\n        );\n    }\n    return right<ApplicationError, APIGatewayEvent>(event);\n} \n\nconst paramsArePositiveIntegers = (event: APIGatewayEvent) => {\n    if(!onlyDigits(event.queryStringParameters.e) || !onlyDigits(event.queryStringParameters.n))    {\n        return left<ApplicationError, APIGatewayEvent>(\n            new ApplicationError(\n                'Error parsing query parameters',\n                ['Query params should be positive integers'],\n                StatusCodes.BAD_REQUEST\n            )\n        );\n    }\n    return right<ApplicationError, APIGatewayEvent>(event);\n}\n\nconst signatureIsHexidecimal = (event: APIGatewayEvent) => {\n    if(!onlyHexaDecimal(event.queryStringParameters.signature))    {\n        return left<ApplicationError, APIGatewayEvent>(\n            new ApplicationError(\n                'Error parsing query parameters',\n                ['Signature should contain only Hexadecimal characters'],\n                StatusCodes.BAD_REQUEST\n            )\n        );\n    }\n    return right<ApplicationError, APIGatewayEvent>(event);\n}\n\nconst validateVerifySignatureParameters = (event: APIGatewayEvent): Either<ApplicationError, APIGatewayEvent> => {\n    return pipe(\n        paramsNotNull(event),\n        chain(paramsArePositiveIntegers),\n        chain(signatureIsHexidecimal)\n    )\n}\n\nconst rightCalculateHash = (event: VerifySignatureParameters) => {\n    return right({\n        ...event,\n        hash: calculateHash(event.m)\n    })\n}\n\nconst calculateSignatureHash = (event) => {\n    return right({\n        ...event,\n        calculatedHash: longToBytes(fastModularExponentiation(BigInt(event.signature), BigInt(event.e), BigInt(event.n)).toString())\n    })\n}\n\nconst verifySignMatches = (event) => {\n    if(event.hash === event.calculatedHash) {\n        return right(\"Signature is Verified\")\n    }\n    return left(\n        new ApplicationError(\n            'Error verifying signature',\n            ['Signature does not match'],\n            StatusCodes.BAD_REQUEST\n        )\n    );\n}\n\nconst verifySign = (event: VerifySignatureParameters) => {\n    return pipe(\n        calculateSignatureHash(event),\n        chain(rightCalculateHash),\n        chain(verifySignMatches)\n    )\n}\n\nasync function handler(event: APIGatewayEvent, context: Context) {\n    return pipe(\n            validateVerifySignatureParameters(event),\n            chain(convertAPIEventToVerifySignatureParameters),\n            chain(verifySign),\n            fold(\n                error => errorResponse(error),\n                result => successResponse(StatusCodes.OK, result)\n            )\n        )\n}\n\nexport { handler };", "const DEFAULT_HEADERS = {\n    'Content-Type': 'application/json'\n  };\n  \n  export class StatusCodes {\n    public static readonly OK = 200;\n    public static readonly CREATED = 201;\n    public static readonly BAD_REQUEST = 400;\n    public static readonly SERVER_ERROR = 500;\n  }\n  \n  export class ApplicationError {\n    public readonly message: string;\n    public readonly errors: string[];\n    public readonly statusCode: StatusCodes;\n  \n    public constructor(message: string, errors: string[], status: StatusCodes) {\n      this.message = message;\n      this.errors = errors;\n      this.statusCode = status;\n    }\n  }\n  \n  export const successResponse = (statusCode: StatusCodes, result: Object) =>\n    ({\n      statusCode,\n      headers: DEFAULT_HEADERS,\n      body: JSON.stringify(result)\n    });\n  \n  export const errorResponse = (error: ApplicationError) =>\n    ({\n      statusCode: error.statusCode,\n      headers: DEFAULT_HEADERS,\n      body: JSON.stringify({ message: error.message, errors: error.errors })\n    });", "import { createHash } from 'crypto';\nimport { Either, left, right } from \"fp-ts/Either\";\n\nexport const fastModularExponentiation = (b: bigint, e: bigint, m: bigint) => {\n    if(BigInt(e) == BigInt(0))\n        return BigInt(1)\n    var t = (BigInt(BigInt(e) & BigInt(1)) == BigInt(1)) ? BigInt(BigInt(b) % BigInt(m)) : BigInt(1)\n    return BigInt((t * fastModularExponentiation(BigInt(BigInt(b) * BigInt(b) % BigInt(m)), BigInt(BigInt(e) >> BigInt(1)), BigInt(m))) % BigInt(m))\n}\n\nexport const longToBytes = (event: string) => {\n    if(BigInt(event) === BigInt(\"0\"))\n        return \"\"\n    return longToBytes((BigInt(event) >> BigInt(\"8\")).toString()) + String.fromCharCode(parseInt(BigInt(BigInt(event) % BigInt(\"256\")).toString()))\n}\n\nexport const bytesToLong = (event: string) => {\n    if(event.length == 0)\n        return 0\n    return BigInt((BigInt(bytesToLong(event.slice(0, -1))) << BigInt(8)) + BigInt(event.slice(-1).charCodeAt(0)))\n}\n\nconst extendedEuclideanAlgorithm = (a: bigint, b: bigint) => {\n    if(BigInt(a) == BigInt(0))\n        return [BigInt(b), BigInt(0), BigInt(1)]\n    var [x, y, z] = extendedEuclideanAlgorithm(BigInt(b % a), BigInt(a))\n    return [BigInt(x), BigInt(z - (b / a)*y), BigInt(y)]\n}\n\nexport const inverseModulo = (a: string, n: string) => {\n    var [g, res, dummy] = extendedEuclideanAlgorithm(BigInt(a), BigInt(n))\n    if(g != BigInt(1))\n        throw \"Inverse Modulo does not exist\"\n    if(BigInt(res) < 0)\n        return BigInt(BigInt(res) + BigInt(n))\n    return BigInt(res)\n}\n\nexport const calculateHash = (event) => {\n    return createHash('sha256').update(event).digest('hex')\n}\n\nexport const onlyDigits = (value) => {\n    return /^\\d+$/.test(value);\n}\n\nexport const onlyHexaDecimal = (value) => {\n    return /^[a-f0-9]+$/.test(value);\n}"],
  "mappings": "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",
  "names": []
}
